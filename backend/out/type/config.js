"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.appConfigOf = exports.keycloakConfigOf = exports.fastifyConfigOf = void 0;
const E = require("fp-ts/Either");
const O = require("fp-ts/Option");
const EM = require("./errorMessage");
const function_1 = require("fp-ts/lib/function");
const errorMessage_1 = require("./errorMessage");
const fastifyConfigOf = (fastifyConfigEnv) => (0, function_1.pipe)(E.Do, EM.eApS('host', E.fromNullable(EM.errorMessageOf(`FASTIFY_HOST not found.`))(fastifyConfigEnv.host)), EM.eApS('port', (0, function_1.pipe)(fastifyConfigEnv.port, E.fromNullable(EM.errorMessageOf(`FASTIFY_PORT not found.`)), E.chain(E.fromPredicate((p) => Number.isInteger(Number(p)) && Number(p) > 0, (p) => EM.errorMessageOf(`FASTIFY_PORT is not a port: ${p}.`))), E.map(parseInt))), EM.eApS('logLevel', (0, function_1.pipe)(fastifyConfigEnv.logLevel, O.fromNullable, O.match(() => 'debug', function_1.identity), E.right)));
exports.fastifyConfigOf = fastifyConfigOf;
const keycloakConfigOf = (keycloakConfigEnv) => (0, function_1.pipe)(E.Do, EM.eApS('appOrigin', E.fromNullable(EM.errorMessageOf(`KEYCLOAK_APP_ORIGIN not found.`))(keycloakConfigEnv.appOrigin)), EM.eApS('clientId', E.fromNullable(EM.errorMessageOf(`KEYCLOAK_CLIENT_ID not found.`))(keycloakConfigEnv.clientId)), EM.eApS('clientSecret', E.fromNullable(EM.errorMessageOf(`KEYCLOAK_CLIENT_SECRET not found.`))(keycloakConfigEnv.clientSecret)), EM.eApS('keycloakSubdomain', E.fromNullable(EM.errorMessageOf(`KEYCLOAK_SUBDOMAIN not found.`))(keycloakConfigEnv.keycloakSubdomain)));
exports.keycloakConfigOf = keycloakConfigOf;
const appConfigOf = (appConfigEnv) => (0, function_1.pipe)(E.Do, EM.eApS('fastifyConfig', E.mapLeft((0, errorMessage_1.errorMessageAddFront)(`'fastifyConfig' error:\n`))((0, exports.fastifyConfigOf)(appConfigEnv.fastifyConfig))), EM.eApS('keycloakConfig', E.mapLeft((0, errorMessage_1.errorMessageAddFront)(`'keycloakConfig' error:\n`))((0, exports.keycloakConfigOf)(appConfigEnv.keycloakConfig))));
exports.appConfigOf = appConfigOf;
